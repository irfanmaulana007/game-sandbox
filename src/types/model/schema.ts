/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgres://username:password@localhost:5432/game -t _prisma_migrations -t battle_logs -t character_equipment -t character_inventory -t characters -t equipment -t items -t job_classes -t maps -t monster_details -t monsters -t users -s public
 *
 */


export type Json = unknown;
export type BattleResult = 'defeat' | 'victory';
export type EquipmentSlot = 'accessory1' | 'accessory2' | 'armor' | 'weapon';
export type EquipmentType = 'accessory' | 'armor' | 'weapon';
export type MapDifficulty = 'easy' | 'extreme' | 'hard' | 'normal';
export type MonsterRank = 'boss' | 'elite' | 'legendary' | 'normal';
export type Rarity = 'common' | 'epic' | 'legendary' | 'rare' | 'uncommon';

// Table _prisma_migrations
export interface PrismaMigrations {
  id: string;
  checksum: string;
  finished_at: Date | null;
  migration_name: string;
  logs: string | null;
  rolled_back_at: Date | null;
  started_at: Date;
  applied_steps_count: number;
}
export interface PrismaMigrationsInput {
  id: string;
  checksum: string;
  finished_at?: Date | null;
  migration_name: string;
  logs?: string | null;
  rolled_back_at?: Date | null;
  started_at?: Date;
  applied_steps_count?: number;
}
const _prisma_migrations = {
  tableName: '_prisma_migrations',
  columns: ['id', 'checksum', 'finished_at', 'migration_name', 'logs', 'rolled_back_at', 'started_at', 'applied_steps_count'],
  requiredForInsert: ['id', 'checksum', 'migration_name'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as PrismaMigrations,
  $input: null as unknown as PrismaMigrationsInput
} as const;

// Table battle_logs
export interface BattleLogs {
  id: string;
  character_id: string;
  monster_id: number;
  battleResult: BattleResult;
  character_health_remaining: number;
  monster_health_remaining: number;
  turns_taken: number;
  experience_gained: number;
  gold_gained: number;
  battle_date: Date;
}
export interface BattleLogsInput {
  id: string;
  character_id: string;
  monster_id: number;
  battleResult: BattleResult;
  character_health_remaining: number;
  monster_health_remaining: number;
  turns_taken: number;
  experience_gained: number;
  gold_gained: number;
  battle_date?: Date;
}
const battle_logs = {
  tableName: 'battle_logs',
  columns: ['id', 'character_id', 'monster_id', 'battleResult', 'character_health_remaining', 'monster_health_remaining', 'turns_taken', 'experience_gained', 'gold_gained', 'battle_date'],
  requiredForInsert: ['id', 'character_id', 'monster_id', 'battleResult', 'character_health_remaining', 'monster_health_remaining', 'turns_taken', 'experience_gained', 'gold_gained'],
  primaryKey: 'id',
  foreignKeys: {
    character_id: { table: 'characters', column: 'id', $type: null as unknown as Characters },
    monster_id: { table: 'monsters', column: 'id', $type: null as unknown as Monsters },
  },
  $type: null as unknown as BattleLogs,
  $input: null as unknown as BattleLogsInput
} as const;

// Table character_equipment
export interface CharacterEquipment {
  id: string;
  character_id: string;
  equipment_id: number;
  slot: EquipmentSlot;
  equipped_at: Date;
}
export interface CharacterEquipmentInput {
  id: string;
  character_id: string;
  equipment_id: number;
  slot: EquipmentSlot;
  equipped_at?: Date;
}
const character_equipment = {
  tableName: 'character_equipment',
  columns: ['id', 'character_id', 'equipment_id', 'slot', 'equipped_at'],
  requiredForInsert: ['id', 'character_id', 'equipment_id', 'slot'],
  primaryKey: 'id',
  foreignKeys: {
    character_id: { table: 'characters', column: 'id', $type: null as unknown as Characters },
    equipment_id: { table: 'equipment', column: 'id', $type: null as unknown as Equipment },
  },
  $type: null as unknown as CharacterEquipment,
  $input: null as unknown as CharacterEquipmentInput
} as const;

// Table character_inventory
export interface CharacterInventory {
  id: string;
  character_id: string;
  item_id: number;
  quantity: number;
  created_at: Date;
}
export interface CharacterInventoryInput {
  id: string;
  character_id: string;
  item_id: number;
  quantity?: number;
  created_at?: Date;
}
const character_inventory = {
  tableName: 'character_inventory',
  columns: ['id', 'character_id', 'item_id', 'quantity', 'created_at'],
  requiredForInsert: ['id', 'character_id', 'item_id'],
  primaryKey: 'id',
  foreignKeys: {
    character_id: { table: 'characters', column: 'id', $type: null as unknown as Characters },
    item_id: { table: 'items', column: 'id', $type: null as unknown as Items },
  },
  $type: null as unknown as CharacterInventory,
  $input: null as unknown as CharacterInventoryInput
} as const;

// Table characters
export interface Characters {
  id: string;
  user_id: string;
  name: string;
  job_id: number;
  level: number;
  experience: number;
  health: number;
  max_health: number;
  attack: number;
  defense: number;
  speed: number;
  critical: number;
  status_points: number;
  gold: number;
  created_at: Date;
  updated_at: Date;
}
export interface CharactersInput {
  id: string;
  user_id: string;
  name: string;
  job_id: number;
  level?: number;
  experience?: number;
  health: number;
  max_health: number;
  attack: number;
  defense: number;
  speed: number;
  critical: number;
  status_points?: number;
  gold?: number;
  created_at?: Date;
  updated_at: Date;
}
const characters = {
  tableName: 'characters',
  columns: ['id', 'user_id', 'name', 'job_id', 'level', 'experience', 'health', 'max_health', 'attack', 'defense', 'speed', 'critical', 'status_points', 'gold', 'created_at', 'updated_at'],
  requiredForInsert: ['id', 'user_id', 'name', 'job_id', 'health', 'max_health', 'attack', 'defense', 'speed', 'critical', 'updated_at'],
  primaryKey: 'id',
  foreignKeys: {
    user_id: { table: 'users', column: 'id', $type: null as unknown as Users },
    job_id: { table: 'job_classes', column: 'id', $type: null as unknown as JobClasses },
  },
  $type: null as unknown as Characters,
  $input: null as unknown as CharactersInput
} as const;

// Table equipment
export interface Equipment {
  id: number;
  name: string;
  type: EquipmentType;
  rarity: Rarity;
  min_level: number;
  health_bonus: number;
  attack_bonus: number;
  defense_bonus: number;
  speed_bonus: number;
  critical_bonus: number;
  description: string | null;
  drop_rate: number;
  created_at: Date;
}
export interface EquipmentInput {
  id?: number;
  name: string;
  type: EquipmentType;
  rarity: Rarity;
  min_level?: number;
  health_bonus?: number;
  attack_bonus?: number;
  defense_bonus?: number;
  speed_bonus?: number;
  critical_bonus?: number;
  description?: string | null;
  drop_rate?: number;
  created_at?: Date;
}
const equipment = {
  tableName: 'equipment',
  columns: ['id', 'name', 'type', 'rarity', 'min_level', 'health_bonus', 'attack_bonus', 'defense_bonus', 'speed_bonus', 'critical_bonus', 'description', 'drop_rate', 'created_at'],
  requiredForInsert: ['name', 'type', 'rarity'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Equipment,
  $input: null as unknown as EquipmentInput
} as const;

// Table items
export interface Items {
  id: number;
  name: string;
  type: string;
  description: string | null;
  effect_value: number | null;
  rarity: Rarity;
  drop_rate: number;
  created_at: Date;
}
export interface ItemsInput {
  id?: number;
  name: string;
  type: string;
  description?: string | null;
  effect_value?: number | null;
  rarity: Rarity;
  drop_rate?: number;
  created_at?: Date;
}
const items = {
  tableName: 'items',
  columns: ['id', 'name', 'type', 'description', 'effect_value', 'rarity', 'drop_rate', 'created_at'],
  requiredForInsert: ['name', 'type', 'rarity'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Items,
  $input: null as unknown as ItemsInput
} as const;

// Table job_classes
export interface JobClasses {
  id: number;
  name: string;
  description: string | null;
  base_health: number;
  base_attack: number;
  base_defense: number;
  base_speed: number;
  base_critical: number;
  health_per_level: number;
  attack_per_level: number;
  defense_per_level: number;
  speed_per_level: number;
  critical_per_level: number;
}
export interface JobClassesInput {
  id?: number;
  name: string;
  description?: string | null;
  base_health: number;
  base_attack: number;
  base_defense: number;
  base_speed: number;
  base_critical: number;
  health_per_level?: number;
  attack_per_level?: number;
  defense_per_level?: number;
  speed_per_level?: number;
  critical_per_level?: number;
}
const job_classes = {
  tableName: 'job_classes',
  columns: ['id', 'name', 'description', 'base_health', 'base_attack', 'base_defense', 'base_speed', 'base_critical', 'health_per_level', 'attack_per_level', 'defense_per_level', 'speed_per_level', 'critical_per_level'],
  requiredForInsert: ['name', 'base_health', 'base_attack', 'base_defense', 'base_speed', 'base_critical'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as JobClasses,
  $input: null as unknown as JobClassesInput
} as const;

// Table maps
export interface Maps {
  id: number;
  name: string;
  description: string | null;
  min_level: number;
  max_level: number;
  difficulty: MapDifficulty;
  background_image: string | null;
  created_at: Date;
}
export interface MapsInput {
  id?: number;
  name: string;
  description?: string | null;
  min_level?: number;
  max_level?: number;
  difficulty: MapDifficulty;
  background_image?: string | null;
  created_at?: Date;
}
const maps = {
  tableName: 'maps',
  columns: ['id', 'name', 'description', 'min_level', 'max_level', 'difficulty', 'background_image', 'created_at'],
  requiredForInsert: ['name', 'difficulty'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Maps,
  $input: null as unknown as MapsInput
} as const;

// Table monster_details
export interface MonsterDetails {
  id: number;
  monster_id: number;
  rank: MonsterRank;
  description: string | null;
  image_url: string | null;
  drop_table: Json | null;
  created_at: Date;
}
export interface MonsterDetailsInput {
  id?: number;
  monster_id: number;
  rank: MonsterRank;
  description?: string | null;
  image_url?: string | null;
  drop_table?: Json | null;
  created_at?: Date;
}
const monster_details = {
  tableName: 'monster_details',
  columns: ['id', 'monster_id', 'rank', 'description', 'image_url', 'drop_table', 'created_at'],
  requiredForInsert: ['monster_id', 'rank'],
  primaryKey: 'id',
  foreignKeys: { monster_id: { table: 'monsters', column: 'id', $type: null as unknown as Monsters }, },
  $type: null as unknown as MonsterDetails,
  $input: null as unknown as MonsterDetailsInput
} as const;

// Table monsters
export interface Monsters {
  id: number;
  name: string;
  level: number;
  health: number;
  attack: number;
  defense: number;
  speed: number;
  critical: number;
  experience_reward: number;
  gold_reward: number;
  map_id: number | null;
  created_at: Date;
}
export interface MonstersInput {
  id?: number;
  name: string;
  level?: number;
  health: number;
  attack: number;
  defense: number;
  speed: number;
  critical: number;
  experience_reward?: number;
  gold_reward?: number;
  map_id?: number | null;
  created_at?: Date;
}
const monsters = {
  tableName: 'monsters',
  columns: ['id', 'name', 'level', 'health', 'attack', 'defense', 'speed', 'critical', 'experience_reward', 'gold_reward', 'map_id', 'created_at'],
  requiredForInsert: ['name', 'health', 'attack', 'defense', 'speed', 'critical'],
  primaryKey: 'id',
  foreignKeys: { map_id: { table: 'maps', column: 'id', $type: null as unknown as Maps }, },
  $type: null as unknown as Monsters,
  $input: null as unknown as MonstersInput
} as const;

// Table users
export interface Users {
  id: string;
  username: string;
  email: string;
  password_hash: string;
  created_at: Date;
  updated_at: Date;
}
export interface UsersInput {
  id: string;
  username: string;
  email: string;
  password_hash: string;
  created_at?: Date;
  updated_at: Date;
}
const users = {
  tableName: 'users',
  columns: ['id', 'username', 'email', 'password_hash', 'created_at', 'updated_at'],
  requiredForInsert: ['id', 'username', 'email', 'password_hash', 'updated_at'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Users,
  $input: null as unknown as UsersInput
} as const;


export interface TableTypes {
  _prisma_migrations: {
    select: PrismaMigrations;
    input: PrismaMigrationsInput;
  };
  battle_logs: {
    select: BattleLogs;
    input: BattleLogsInput;
  };
  character_equipment: {
    select: CharacterEquipment;
    input: CharacterEquipmentInput;
  };
  character_inventory: {
    select: CharacterInventory;
    input: CharacterInventoryInput;
  };
  characters: {
    select: Characters;
    input: CharactersInput;
  };
  equipment: {
    select: Equipment;
    input: EquipmentInput;
  };
  items: {
    select: Items;
    input: ItemsInput;
  };
  job_classes: {
    select: JobClasses;
    input: JobClassesInput;
  };
  maps: {
    select: Maps;
    input: MapsInput;
  };
  monster_details: {
    select: MonsterDetails;
    input: MonsterDetailsInput;
  };
  monsters: {
    select: Monsters;
    input: MonstersInput;
  };
  users: {
    select: Users;
    input: UsersInput;
  };
}

export const tables = {
  _prisma_migrations,
  battle_logs,
  character_equipment,
  character_inventory,
  characters,
  equipment,
  items,
  job_classes,
  maps,
  monster_details,
  monsters,
  users,
}
